<?php
declare(strict_types = 1);
namespace hexydec\html;
use \hexydec\tokens\tokenise;

class doctype implements token {

	/**
	 * @var string The text content of this object
	 */
	protected $content = '';

	/**
	 * Constructs the script object
	 *
	 * @param htmldoc $root The parent htmldoc object
	 */
	public function __construct(htmldoc $root) {

	}

	/**
	 * Parses an array of tokens into an HTML documents
	 *
	 * @param array &$tokens An array of tokens generated by tokenise()
	 * @param array $config An array of configuration options
	 * @return void
	 */
	public function parse(tokenise $tokens) : void {
		$content = '';
		while (($token = $tokens->next()) !== null && $token['type'] !== 'tagopenend') {
			if ($token['type'] === 'attribute') {
				$content .= ($content ? ' ' : '').\ltrim($token['value']);
			}
		}
		$this->content = \html_entity_decode($content);
	}

	/**
	 * Minifies the internal representation of the doctype
	 *
	 * @param array $minify An array of minification options controlling which operations are performed
	 * @return void
	 */
	public function minify(array $minify) : void {

	}

	/**
	 * Compile the tag as an HTML string
	 *
	 * @param array $options An array indicating output options
	 * @return string The compiled HTML
	 */
	public function html(array $options = []) : string {
		return '<!DOCTYPE '.\htmlspecialchars($this->content).'>';
	}
}
